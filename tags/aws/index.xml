<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aws on sketches</title>
    <link>https://www.dc0d.com/tags/aws/</link>
    <description>Recent content in aws on sketches</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© Copyright Notice | Kaveh Shahbazian</copyright>
    <lastBuildDate>Fri, 05 Mar 2021 22:09:21 +0100</lastBuildDate><atom:link href="https://www.dc0d.com/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Study In Reliable Messaging Without Distributed Transactions</title>
      <link>https://www.dc0d.com/post/2021/reliable-messaging-without-distributed-transactions/</link>
      <pubDate>Fri, 05 Mar 2021 22:09:21 +0100</pubDate>
      
      <guid>https://www.dc0d.com/post/2021/reliable-messaging-without-distributed-transactions/</guid>
      <description>In a Microservice Architecture, some services update an entity. A service that updates an entity, might need to send an event to a down-stream service, to inform it about the update. The problem is, these two actions - updating a database and sending a message to a queue - can not be guaranteed to be completed transactionally. What if updating the database fails, but a message be sent to the queue?</description>
    </item>
    
  </channel>
</rss>
